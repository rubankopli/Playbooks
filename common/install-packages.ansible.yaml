---
# Install commands for the packages listed in the package inventory

- name: Install packages
  hosts: all
  become: true
  vars_files:
    - package-inventory.ansible.yaml
  vars:
    deb_architecture_map: {
      "armv6l": "arm",    #
      "armv7l": "arm",    #
      "aarch64": "arm64", #
      "x86_64": "amd64",  #
      "i386": "386"       #
    }
    os_vendor_map: {
      "Linux": "unknown-linux",
      "Windows": "pc-windows",
    }

  pre_tasks:
    - name: Set deb style architecture name
      ansible.builtin.set_fact:
        deb_arch: "{{ [ansible_architecture] | map('extract', deb_architecture_map) | first }}"

    - name: Set os_vendor variable
      ansible.builtin.set_fact:
        os_vendor: "{{ [ansible_system] | map('extract', os_vendor_map) | first }}"

    - name: Set lib type
      block:
        - name: Check for gnu libc
          ansible.builtin.command:
            cmd: which ldd
          register: ldd_check
          ignore_errors: true
          changed_when: false
          failed_when: false

        - name: Check for musl libc
          ansible.builtin.command:
            cmd: which musl
          register: musl_check
          ignore_errors: true
          changed_when: false
          failed_when: false

        - name: Set libc variable
          ansible.builtin.set_fact:
            libc: "{{ 'gnu' if ldd_check.rc == 0 else 'musl' if musl_check.rc == 0 else 'unknown' }}"

    # we use eget to make installing bin a bit easier, and bin to install and manage github binary releases
    - name: Install eget
      block:
        - name: Check if eget is installed
          ansible.builtin.command: which eget
          register: eget_check
          ignore_errors: true
          changed_when: false
          failed_when: false

        - name: Check if curl is installed

          ansible.builtin.command: which curl
          register: curl_check
          ignore_errors: true
          changed_when: false
          failed_when: false

        - name: Download eget install script
          ansible.builtin.get_url:
            url: https://zyedidia.github.io/eget.sh
            dest: /usr/local/bin/eget.sh
            mode: u=rwx,g=rx,o=r
          when: eget_check.rc != 0

        - name: Install curl
          ansible.builtin.package:
            name: "curl"
            state: present
          when: curl_check.rc != 0

        - name: Run eget install script
          ansible.builtin.command:
            cmd: /usr/local/bin/eget.sh
          when: eget_check.rc != 0
          changed_when: true

        - name: Cleanup eget.sh install script
          ansible.builtin.command:
            cmd: rm /usr/local/bin/eget.sh
          when: eget_check.rc != 0
          changed_when: true

    - name: Install pip
      ansible.builtin.package:
        name: pip
        state: present

    - name: Create package lists by install method
      block:
        - name: Create core package list
          ansible.builtin.set_fact:
            core_utilities_packages: "{{ core_utilities.values() | flatten | list }}"

        - name: Create list of all packages from inventory
          ansible.builtin.set_fact:
            all_packages: "{{ core_packages + core_utilities_packages + utility_services + gui_utilities + user_utilities }}"

        - name: Sort packages into lists by install type
          ansible.builtin.set_fact:
            package_manager_packages: "{{ all_packages | selectattr('install_method', 'equalto', 'package_manager') }}"
            eget_packages: "{{ all_packages | selectattr('install_method', 'equalto', 'eget') }}"
            pip_packages: "{{ all_packages | selectattr('install_method', 'equalto', 'pip') }}"
            download_binary_packages: "{{ all_packages | selectattr('install_method', 'equalto', 'download_binary') }}"

  tasks:
    - name: Install packages available through package manager
      ansible.builtin.package:
        name: "{{ item.name }}"
        state: present
      loop: "{{ package_manager_packages }}"

    - name: Install packages using pip
      ansible.builtin.pip:
        name: "{{ item.name }}"
      loop: "{{ pip_packages }}"

    - name: Install packages using eget
      block:
        - name: Binary eget package installations
          ansible.builtin.command:
            cmd: >-
              eget
              {{ '-a "' ~ item.filter ~ '"' if item.filter is defined else '' }}
              --to /usr/local/bin/
              {{ item.target }}
          register: eget_return
          changed_when: true # If this runs we're always changing the system state
          failed_when: eget_return.rc not in [0, 2]
          loop: "{{ eget_packages }}"
          async: 30
          poll: 5

        # TODO
        # - name: Man page eget installations
        #   ansible.builtin.command:
        #     cmd: eget {{ item.target }} --filter man --to /usr/local/share/man/{{ item.name }}//
        #   when: item.eget_man | default(false)

        # TODO
        # Fish completions

    - name: Install binary download packages
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "/usr/local/bin/{{ item.name }}"
        mode: u=rwx,g=rx,o=r
      loop: "{{ download_binary_packages }}"

    - name: Install custom install_method packages
      block:

        - name: Install chezmoi
          block:
            - name: Check if chezmoi is installed
              ansible.builtin.command: which chezmoi
              register: chezmoi_check
              ignore_errors: true
              changed_when: false
              failed_when: false

            - name: Download chezmoi install script
              ansible.builtin.get_url:
                url: https://get.chezmoi.io
                dest: /tmp/get_chezmoi.sh
                mode: u=rwx,g=rx,o=rx
              when: chezmoi_check.rc != 0

            - name: Run chezmoi install script
              ansible.builtin.command:
                cmd: "/tmp/get_chezmoi.sh -- init --apply rubankopli"
              when: chezmoi_check.rc != 0
              become: true
              become_user: rkopli
              changed_when: ("~/.local/share/chezmoi").stat.isdir is defined
